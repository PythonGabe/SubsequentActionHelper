name: "Checkout Action Repo - for Subsequent Actions"
description: "Checkout a action repo for subsequent actions"

inputs:
  repository:
    description: "Repository to checkout"
    required: true
  action-repo-path:
    description: "Path to the action repo"
    required: true
  action-ref:
    description: "The action ref to checkout"
    required: true
  private-repo-token:
    description: "Github Actions Token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout action repo
      id: setup
      run: |

        IS_ACTION_REPO='false'
        DO_CHECKOUT='false'
        GET_REPO='false'
        GITHUB_TOKEN_SET='false'

        if [[ ! ${{ inputs.action-repo-path }} =~ ^\./ ]]; then
          echo "The action-repo-path must start with ./"
          exit 1
        fi
        # check that the input path starts with ./
        # if the repository is empty then it means this is running in the same repository ad github.action_repository is not available when running in the same repository
        INPUT_REPOSITORY=${{ inputs.repository }}
        INPUT_REF=${{ inputs.action-ref }}
        
        if [[ -z "$INPUT_REPOSITORY" ]]; then
          echo "Repository is empty"
          echo "This is the same repository"
          IS_ACTION_REPO='true'
          GET_REPO='true'
          INPUT_REPOSITORY="${{ github.repository }}"
          INPUT_REF="${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.head_ref }}"
        elif [[ "$INPUT_REPOSITORY" = "${{ github.repository }}" ]]; then
          echo "Repository is not empty"
          echo "This is the same repository"
          IS_ACTION_REPO='true'
          GET_REPO='true'
        else
          echo "Repository is not empty"
          echo "This is not the same repository"
          DO_CHECKOUT=true
        fi

        COPY_PATH=$(echo ${{ inputs.action-repo-path }} | sed 's/^\.\///')

        if [[ -d "${{ inputs.action-repo-path }}" ]]; then
          # check if the value in action-repo-path/action-ref.yaml is the same as the action_ref
          # check if the file exists
          if [[ ! -f ${{ inputs.action-repo-path }}/action-ref.txt ]]; then
            echo "The action-ref.txt file does not exist"
            rm -rf ${{ inputs.action-repo-path }}
          else 
            FOUND_ACTION_REPO_REF=$(cat ${{ inputs.action-repo-path }}/action-ref.txt)
            if [[ $FOUND_ACTION_REPO_REF = "$INPUT_REF" ]]; then
              echo "The action repo is already checked out and the ref is the same as the input ref"
              DO_CHECKOUT=false
              GET_REPO=false
            else
              # remove the directory for checking out or copying the repo
              rm -rf ${{ inputs.action-repo-path }}
            fi
          fi
        fi

        mkdir -p ${{ inputs.action-repo-path }}

        if [[ $GET_REPO = 'true' ]]; then
          echo "Getting the repository"
          # copy the current repo to the action repo path
          # can't copy into itself

          TMP_PATH="$(dirname $GITHUB_WORKSPACE)/tmp-action-repo"
          echo "Creating the action repo path tmp directory at $TMP_PATH"
          mkdir -p $TMP_PATH
          echo "Copying the current repo to the tmp directory at $TMP_PATH"
          cp -r ./ $TMP_PATH/
          echo "Copying the action repo from the $TMP_PATH to the action repo path at $GITHUB_WORKSPACE/$COPY_PATH"
          cp -r $TMP_PATH/* $GITHUB_WORKSPACE/$COPY_PATH
          echo "Removing the tmp directory at $TMP_PATH"
          rm -rf $TMP_PATH
        else
          # check if github token is set
          if [[ -n "${{ inputs.private-repo-token }}" ]]; then
            echo "Github token is set"
            GITHUB_TOKEN_SET='true'
          fi
        fi

        echo "IS_ACTION_REPO=$IS_ACTION_REPO" >> $GITHUB_OUTPUT
        echo "DO_CHECKOUT=$DO_CHECKOUT" >> $GITHUB_OUTPUT
        echo "GITHUB_TOKEN_SET=$GITHUB_TOKEN_SET" >> $GITHUB_OUTPUT
        echo "INPUT_REPOSITORY=$INPUT_REPOSITORY" >> $GITHUB_OUTPUT
        echo "INPUT_REF=$INPUT_REF" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Checkout action repo without token
      if: ${{ steps.setup.outputs.DO_CHECKOUT == 'true' && steps.setup.outputs.GITHUB_TOKEN_SET == 'false' }}
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.setup.outputs.INPUT_REPOSITORY }}
        ref: ${{ steps.setup.outputs.INPUT_REF }}
        path: ${{ inputs.action-repo-path }}
    
    - name: Checkout action repo with token
      if: ${{ steps.setup.outputs.DO_CHECKOUT == 'true' && steps.setup.outputs.GITHUB_TOKEN_SET == 'true' }}
      uses: actions/checkout@v4
      with:
        repository: ${{ steps.setup.outputs.INPUT_REPOSITORY }}
        ref: ${{ steps.setup.outputs.INPUT_REF }}
        path: ${{ inputs.action-repo-path }}
        token: ${{ inputs.private-repo-token }}

    - name: Save the ref in the action-ref.yaml file
      run: |
        echo "${{ steps.setup.outputs.INPUT_REF }}" > ${{ inputs.action-repo-path }}/action-ref.txt
      shell: bash
